
mdel a:autoexec.bat .

mattrib a:

mattrib -h -s -r a:msdos.sys

mattrib -r -/ a:*.*

$ mmove autorun.bat test        #移动文件到目录test中

# 安装firewalld
yum install firewalld firewall-config

systemctl start  firewalld # 启动
systemctl status firewalld # 或者 firewall-cmd --state 查看状态
systemctl disable firewalld # 停止
systemctl stop firewalld  # 禁用

# 关闭服务的方法
# 你也可以关闭目前还不熟悉的FirewallD防火墙，而使用iptables，命令如下：

systemctl stop firewalld
systemctl disable firewalld
yum install iptables-services
systemctl start iptables
systemctl enable iptables

firewall-cmd --version  # 查看版本
firewall-cmd --help     # 查看帮助

# 查看设置：
firewall-cmd --state  # 显示状态
firewall-cmd --get-active-zones  # 查看区域信息
firewall-cmd --get-zone-of-interface=eth0  # 查看指定接口所属区域
firewall-cmd --panic-on  # 拒绝所有包
firewall-cmd --panic-off  # 取消拒绝状态
firewall-cmd --query-panic  # 查看是否拒绝

firewall-cmd --reload # 更新防火墙规则
firewall-cmd --complete-reload
# 两者的区别就是第一个无需断开连接，就是firewalld特性之一动态添加规则，第二个需要断开连接，类似重启服务


# 将接口添加到区域，默认接口都在public
firewall-cmd --zone=public --add-interface=eth0
# 永久生效再加上 --permanent 然后reload防火墙

# 设置默认接口区域，立即生效无需重启
firewall-cmd --set-default-zone=public

# 查看所有打开的端口：
firewall-cmd --zone=dmz --list-ports

# 加入一个端口到区域：
firewall-cmd --zone=dmz --add-port=8080/tcp
# 若要永久生效方法同上

# 打开一个服务，类似于将端口可视化，服务需要在配置文件中添加，/etc/firewalld 目录下有services文件夹，这个不详细说了，详情参考文档
firewall-cmd --zone=work --add-service=smtp

# 移除服务
firewall-cmd --zone=work --remove-service=smtp

# 显示支持的区域列表
firewall-cmd --get-zones

# 设置为家庭区域
firewall-cmd --set-default-zone=home

# 查看当前区域
firewall-cmd --get-active-zones

# 设置当前区域的接口
firewall-cmd --get-zone-of-interface=enp03s

# 显示所有公共区域（public）
firewall-cmd --zone=public --list-all

# 临时修改网络接口（enp0s3）为内部区域（internal）
firewall-cmd --zone=internal --change-interface=enp03s

# 永久修改网络接口enp03s为内部区域（internal）
firewall-cmd --permanent --zone=internal --change-interface=enp03s

# 显示服务列表
Amanda, ftp, Samba和tftp等最重要的服务已经被FirewallD提供相应的服务，可以使用如下命令查看：

firewall-cmd --get-services

# 允许ssh服务通过
firewall-cmd --enable service=ssh

# 禁止SSH服务通过
firewall-cmd --disable service=ssh

# 打开TCP的8080端口
firewall-cmd --enable ports=8080/tcp

# 临时允许Samba服务通过600秒
firewall-cmd --enable service=samba --timeout=600

# 显示当前服务
firewall-cmd --list-services

# 添加HTTP服务到内部区域（internal）
firewall-cmd --permanent --zone=internal --add-service=http
firewall-cmd --reload     # 在不改变状态的条件下重新加载防火墙

# 打开443/TCP端口
firewall-cmd --add-port=443/tcp

# 永久打开3690/TCP端口
firewall-cmd --permanent --add-port=3690/tcp

# 永久打开端口好像需要reload一下，临时打开好像不用，如果用了reload临时打开的端口就失效了
# 其它服务也可能是这样的，这个没有测试
firewall-cmd --reload

# 查看防火墙，添加的端口也可以看到
firewall-cmd --list-all

# FirewallD包括一种直接模式，使用它可以完成一些工作，例如打开TCP协议的9999端口

firewall-cmd --direct -add-rule ipv4 filter INPUT 0 -p tcp --dport 9000 -j accept
firewall-cmd --reload


firewall-cmd --add-service=mysql        # 开放mysql端口
firewall-cmd --remove-service=http      # 阻止http端口
firewall-cmd --list-services            # 查看开放的服务
firewall-cmd --add-port=3306/tcp        # 开放通过tcp访问3306
firewall-cmd --remove-port=80tcp        # 阻止通过tcp访问3306
firewall-cmd --add-port=233/udp         # 开放通过udp访问233
firewall-cmd --list-ports               # 查看开放的端口

firewall-cmd --query-masquerade # 检查是否允许伪装IP
firewall-cmd --add-masquerade   # 允许防火墙伪装IP
firewall-cmd --remove-masquerade# 禁止防火墙伪装IP

firewall-cmd --add-forward-port=port=80:proto=tcp:toport=8080   # 将80端口的流量转发至8080
firewall-cmd --add-forward-port=port=80:proto=tcp:toaddr=192.168.0.1 # 将80端口的流量转发至192.168.0.1
firewall-cmd --add-forward-port=port=80:proto=tcp:toaddr=192.168.0.1:toport=8080 # 将80端口的流量转发至192.168.0.1的8080端口

# 假定 $remote_server, $my_user_id, $my_password, 和$my_command 已经读入。
# 向远程服务器请求打开一个telnet会话，并等待服务器询问用户名
spawn telnet $remote_server
expect "username:"

# 输入用户名，并等待服务器询问密码
send "$my_user_id\r"
expect "password:"

# 输入密码，并等待键入需要运行的命令
send "$my_password\r"
expect "%"

# 输入预先定好的密码，等待运行结果
send "$my_command\r"
expect "%"

# 将运行结果存入到变量中，显示出来或者写到磁盘中
set results $expect_out(buffer)

# 退出telnet会话，等待服务器的退出提示EOF
send "exit\r"
expect eof


# 向远程服务器请求打开一个FTP会话，并等待服务器询问用户名
spawn ftp $remote_server
expect "username:"

# 输入用户名，并等待服务器询问密码
send "$my_user_id\r"
expect "password:"

# 输入密码，并等待FTP提示符的出现
send "$my_password\r"
expect "ftp>"

# 切换到二进制模式，并等待FTP提示符的出现
send "bin\r"
expect "ftp>"

# 关闭ftp的提示符
send "prompt\r"
expect "ftp>"

# 下载所有文件
send "mget *\r"
expect "ftp>"

# 退出此次ftp会话，并等待服务器的退出提示EOF
send "bye\r"
expect eof


# pssh -h ip.txt -i uptime


# pssh -h IP.txt -i "/usr/local/mysql/bin/mysql -e 'show slave status \G'"|grep Running:

# pssh -h IP.txt -i -o /tmp/pssh/ uptime


# ll /tmp/pssh/


# cat /tmp/pssh/*

lixi@lixi-desktop:~$ ping -T tsandaddr www.ustc.edu.cn -c 1

lixi@lixi-desktop:~# ./clockdiff -o 202.38.64.9
lixi@lixi-desktop:~# ./clockdiff 202.38.64.9

lixi@lixi-desktop:~#./clockdiff gigagate1.Princeton.EDU


service sshd start


rsync -vzrtopg --progress -e ssh --delete work@172.16.78.192:/www/* /databack/experiment/rsync


vi /etc/xinetd.d/rsync

/etc/init.d/xinetd restart

vi /etc/rsyncd.conf


chmod 600 /etc/rsyncd.passwd


[root@localhost ~]# man -k who

[root@localhost ~]# apropos who
apropos -a emacs vi

# openssl dgst -dss1 -sign dsakey.pem -out dsasign.bin file.txt

# openssl dgst -dss1 -prverify dsakey.pem -signature dsasign.bin file.txt

# openssl sha1 -sign rsaprivate.pem -out rsasign.bin file.txt

# openssl sha1 -verify rsapublic.pem -signature rsasign.bin file.txt

# openssl enc -des3 -salt -in plaintext.doc -out ciphertext.bin

# openssl enc -des-ede3-ofb -d -in ciphertext.bin -out plaintext.doc -pass pass:trousers

# openssl bf-cfb -salt -in plaintext.doc -out ciphertext.bin -pass env:PASSWORD

# openssl base64 -in ciphertext.bin -out base64.txt

# openssl rc5 -in plaintext.doc -out ciphertext.bin -S C62CB1D49F158ADC -iv E9EDACA1BD7090C6 -K 89D4B1678D604FAA3DBFFD030A314B29

# openssl dhparam -out dhparam.pem -2 1024

# openssl dhparam -in dhparam.pem -noout -C

# openssl dsaparam -out dsaparam.pem 1024

# openssl gendsa -out dsaprivatekey.pem -des3 dsaparam.pem

# openssl dsa -in dsaprivatekey.pem -pubout -out dsapublickey.pem

# openssl dsa -in dsaprivatekey.pem -out dsaprivatekey.pem -des3 -passin

# openssl genrsa -out rsaprivatekey.pem -passout pass:trousers -des3 1024

# openssl rsa -in rsaprivatekey.pem -passin pass:trousers -pubout -out rsapubckey.pem

# openssl rsautl -encrypt -pubin -inkey rsapublickey.pem -in plain.txt -out cipher.txt

# openssl rsautl -decrypt -inkey rsaprivatekey.pem -in cipher.txt -out plain.txt

# openssl rsautl -sign -inkey rsaprivatekey.pem -in plain.txt -out signature.bin

# openssl rsautl -verify -pubin -inkey rsapublickey.pem -in signature.bin -out plain

# openssl smime -encrypt -in mail.txt -des3 -out mail.enc cert.pem

# openssl smime -decrypt -in mail.enc -recip cert.pem -inkey key.pem -out mail.txt

# openssl smime -sign -in mail.txt -signer cert.pem -inkey key.pem -out mail.sgn

# openssl smime -verify -in mail.sgn -out mail.txt

chroot target /bin/sh

chroot target /bin/ls

mkdir newRoot

gcc main.c

ldd a.out

cp a.out newRoot
mkdir newRoot/lib
cp /lib/tls/i686/cmov/libc.so.6 newRoot/lib
cp /lib/ld-linux.so.2 newRoot/lib

a.out lib/

su
chroot newRoot /a.out



touch /var/log/btmp

lastb | head


[foobar@localhost ~]$ ls /root


[foobar@localhost ~]$ sudo ls /root


[foobar@localhost ~]$ sudo head -5 /etc/shadow

[foobar@localhost ~]$ sudo /sbin/ifconfigeth0


[foobar@localhost ~]$ sudo ls /rootanaconda-ks.cfg Desktop install.log

touch /var/log/sudo
vi /etc/syslog.conf



ps aux grep syslogd

kill –HUP PID

[foobar@localhost ~]$ sudo ls /rootanaconda-ks.cfg

$cat /var/log/sudoJul 28 22:52:54 localhost sudo:   foobar :


[foobar@localhost ~]$ sudo cat /etc/shadow > /dev/null



[foobar@localhost ~]$ sudo ls /root > /etc/shadowbash: /etc/shadow: 权限不够

skill -STOP 1


skill -CONT 16514

skill -STOP oracle

skill -STOP rman

skill -STOP oracle

skill -STOP -c oracle


snice +4 -u oracle

last -10

renice 1 987 -u daemon root -p 32

systemctl start nfs-server.service

systemctl enable nfs-server.service

systemctl disable nfs-server.service

systemctl status nfs-server.service

systemctl restart nfs-server.service

systemctl list -units --type=service

iptables -I INPUT -p tcp --dport 22 -j accept

sudo systemctl status firewalld.service
sudo systemctl stop firewalld.service
sudo systemctl disable firewalld.service

nohup command > myout.file 2>&1 &

ipcs -a

#watch uptime
#watch -t uptime
#watch -d -n 1 netstat -ntlp
#watch -d 'ls -l | fgrep goface'     //监测goface的文件
#watch -t -differences=cumulative uptime
#watch -n 60 from            //监控mail
#watch -n 1 "df -i;df"       //监测磁盘inode和block数目变化情况

pidof nginx

pmap -x 5371


pidof nginx


pidof crond


pidof init


pgrep -lo httpd


[root@localhost ~]# pgrep -ln httpd


[root@localhost ~]# pgrep -l httpd

[root@localhost ~]# pgrep httpd



service network status

service mysqld status


service mysqld restart


pstree -p

pstree  -a

pgrep -l gaim


pkill gaim

batch

killall vi

atrm 2     //删除任务2

cat /etc/passwd | grep test


cat /etc/shadow | grep test


at now + 10 minutes


atq


[root@localhost ~]# at 5pm+3 days


[root@localhost ~]# at 17:20 tomorrow


[root@localhost ~]# atq


[root@localhost ~]# atq


[root@localhost ~]# atrm 7
[root@localhost ~]# atq


[root@localhost ~]# at -c 8

[root@localhost ~]# id


[root@localhost ~]# id -a

[root@localhost ~]# id -G


[root@localhost ~]# id -g

[root@localhost ~]# id www


pwunconv     //关闭影子密码
cat /etc/passwd | grep test     //发现密码已经在passwd文件中了
ls /etc/shadow     //查看影子文件，提示没有这个文件或目录

# useradd defaults file


[root@linuxde ~]# chage -l root


[root@linuxde ~]# chage -M 60 root
[root@linuxde ~]# chage -l root


[root@linuxde ~]# chage -I 5 root
[root@linuxde ~]# chage -l root

groupmod --password 123456 cdy
cat /etc/group | grep cdy

grpconv
cat /etc/group |  grep cdy


cat /etc/gshadow | grep cdy

grpck   //必须以管理员身份运行
grpck /etc/group /etc/gshadow

echo check_user:x: >> /etc/group    //添加一行错误的格式数据
cat /etc/group | grep check_user


grpck /etc/group
invalid group file entry
delete line 'check_user:x:'? y      //提示是否删除
grpck: the files have been updated  //这时已经删除了错误的行，提示文件已经更新。

cat /etc/group  | grep check_user   //没有查到，已经删除了。

passwd -l lynn

passwd -u lynn

vi /etc/passwd

lynn:x:500:500::/home/lynn:/sbin/nologin

touch /etc/nologin

[rocrocket@localhost ~]$ chsh -l


[rocrocket@localhost ~]$ cat /etc/shells


[rocrocket@localhost ~]$ echo $SHELL


[rocrocket@localhost ~]$ chsh -s /bin/zsh

[rocrocket@localhost ~]$

[rocrocket@localhost ~]$ cat /etc/passwd|grep ^rocrocket


[rocrocket@localhost ~]$ chsh -s /bin/bash

chpasswd < user.txt

groupadd damon  //创建damon工作组
groupdel damon  //删除这个工作组

cat /etc/gshadow | grep cdy


cat /etc/gshadow
cat: /etc/gshadow: 没有那个文件或目录

cat /etc/group | grep cdy
cdy:123456:1000:

gpasswd groupname

gpasswd -A peter users

gpasswd -a mary users
gpasswd -a allen users

gpasswd -a user_name group_name

[root@localhost ~]# passwd linuxde    //更改或创建linuxde用户的密码；


[linuxde@localhost ~]$ passwd


[root@localhost ~]# passwd -l linuxde    //锁定用户linuxde不能更改密码；


[linuxde@localhost ~]# su linuxde   //通过su切换到linuxde用户；
[linuxde@localhost ~]$ passwd      //linuxde来更改密码；

[root@localhost ~]# passwd -d linuxde  //清除linuxde用户密码；


[root@localhost ~]# passwd -S linuxde    //查询linuxde用户密码状态；


pwck /etc/passwd

[root@localhost Desktop]# chfn



[root@localhost Desktop]# chfn -f jack

groups linux


[root@localhost beinan]# chsh --list

[root@localhost root]# finger

usermod -G staff newuser2

usermod -l newuser1 newuser

usermod -L newuser1

usermod -U newuser1

su -c ls root

su root -f

su -test

userdel linuxde       //删除用户linuxde，但不删除其家目录及文件；
userdel -r linuxde    //删除用户linuxde，其家目录及文件一并删除；

groupadd -g 344 linuxde

useradd –g sales jack –G company,employees    //-g：加入主要组、-G：加入次要组

useradd caojh -u 544

getsebool -a

getsebool httpd_enable_homedirs
setsebool -P httpd_enable_homedirs=0    //0是关闭  1是开启


semanage fcontext -l

mkdir /srv/samba
ll -Zd /srv/samba

semanage fcontext -l | grep '/srv'
semanage fcontext -a -t public_content_t "/srv/samba(/.*)?"
semanage fcontext -l | grep '/srv/samba'
cat /etc/selinux/targeted/contexts/files/file_contexts.local


restorecon -Rv /srv/samba* #尝试恢复默认值
drwxr-xr-x  root root system_u:object_r:public_content_t /srv/samba/  #有默认值，以后用restorecon命令来修改比较简单！

startx

startx -w

startx; kill -9 $$

startx -x .xinitrc

startx -m mwm

repquota -a

setsebool -P allow_ftpd_anon_write=1

setsebool -P ftp_home_dir 1

setsebool -P ftpd_is_daemon 1

setsebool -P ftpd_disable_trans 1

setsebool -P httpd_enable_cgi 1

setsebool -P httpd_enable_homedirs 1
chcon -R -t httpd_sys_content_t ~user/public_html

setsebool -P httpd_tty_comm 1

setsebool -P httpd_disable_trans 1
service httpd restart

setsebool -P named_write_master_zones 1

setsebool -P named_disable_trans 1
service named restart

setsebool -P nfs_export_all_ro 1

setsebool -P nfs_export_all_rw 1

setsebool -P use_nfs_home_dirs 1

setsebool -P allow_smbd_anon_write=1

setsebool -P samba_enable_home_dirs 1

setsebool -P use_samba_home_dirs 1

setsebool -P smbd_disable_trans 1
service smb restart

setsebool -P allow_rsync_anon_write=1

setsebool -P rsync_disable_trans 1

setsebool -P allow_kerberos 1

setsebool -P allow_ypbind 1

[root@linuxde.net ~]# yum install httpd

[root@linuxde.net ~]# pwd

[root@linuxde.net ~]# vi index.html

[root@linuxde.net ~]# mv index.html /var/www/html/

[root@linuxde.net html]# ls -Z /var/www/html/
[root@linuxde.net html]# restorecon -R /var/www/html/


mkdir /new
sesearch -a -t httpd_sys_content_t

sesearch -s httpd_t -t httpd_* -a

sesearch -b httpd_enable_homedirs -a

chcon -R -t public_content_t /var/ftp

chcon -t public_content_rw_t /var/ftp/incoming

setsebool -P httpd_enable_homedirs 1
chcon -R -t httpd_sys_content_t ~user/public_html

chcon -t samba_share_t /directory

chcon -t public_content_t /directories

seinfo -b | grep httpd

findfs LABEL=/boot
/dev/hda1

mkswap -c /dev/hdb4 （-c是检查有无坏块）
swapon -v /dev/hdb4
swapon -s
Filename                                type            Size    Used    Priority
/dev/hda5                               partition       506008 96      -1
/dev/hdb4                               partition       489972 0       -2

vi /etc/fstab

edquota -p lanf -u Jack Tom Chen

edquota -g webterm1

edquota -t

setquota –u / 2000 2500 100 110 bye2000

quota -u lanf

[root@localhost ~]# groupadd qgroup
[root@localhost ~]# useradd -m -g qgroup quser1
[root@localhost ~]# useradd -m -g qgroup quser2
[root@localhost ~]# passwd quser1
[root@localhost ~]# passwd quser2
[root@localhost ~]# vi /etc/fstab
[root@localhost ~]# umount /dev/hdb1
[root@localhost ~]# mount -a
[root@localhost ~]# grep '/disk2' /etc/mtab


[root@localhost ~]# mount -o remount /disk2

[root@localhost ~]# quotacheck -avug

[root@localhost ~]# ll /disk2
[root@localhost ~]# cd /disk2
[root@localhost ~]# ln -s aquota.user quota.user
[root@localhost ~]# ln -s aquota.group quota.group

[root@localhost ~]# quotaon -avug
[root@localhost ~]# edquota -u quser1
[root@localhost ~]# edquota -p quser1 quser2      ===>  直接复制给quser2

[root@localhost ~]# edquota -t
[root@localhost ~]# quota -vu quser1 quser2
[root@localhost ~]# edquota -g qgroup
[root@localhost ~]# quota -vg qgroup
Kernel quota version: 6.5.1
mkfs -V -t msdos -c /dev/hda5

mkfs -t ext3 /dev/sda6     //将sda6分区格式化为ext3格式
mkfs -t ext2 /dev/sda7     //将sda7分区格式化为ext2格式

[root@linux ~]# quotacheck -avug


[root@linux ~]# quotacheck -avug -m

mkdir -p /mnt/cdrom

mount -t auto /dev/cdrom /mnt/cdrom
ll /mnt/cdrom

umount -v /dev/sda1

umount -v /mnt/mymount/

umount -v /mnt/mymount/
lsof | grep mymount         查找mymount分区里打开的文件
bash   9341  francois  cwd   DIR   8,1   1024    2 /mnt/mymount

umount -vl /mnt/mymount/     执行延迟卸载

eject /dev/cdrom      卸载并弹出CD

halt -p     //关闭系统后关闭电源。
halt -d     //关闭系统，但不留下纪录。

dumpe2fs /dev/hda1

e2fsck -a -y /dev/sda1

fsck -y /dev/hda2

fsck

mke2fs -q /dev/hda1

reboot        //重开机。
reboot -w     //做个重开机的模拟（只有纪录并不会真的重开机）。

poweroff

shutdown -h now

shutdown +5 "System will shutdown after 5 minutes"
