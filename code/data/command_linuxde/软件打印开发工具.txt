
$ mmove autorun.bat test        #移动文件到目录test中

mattrib a:

mattrib -h -s -r a:msdos.sys

mattrib -r -/ a:*.*

mdel a:autoexec.bat .

# pssh -h ip.txt -i uptime
# pssh -h IP.txt -i "/usr/local/mysql/bin/mysql -e 'show slave status \G'"|grep Running:

# pssh -h IP.txt -i -o /tmp/pssh/ uptime
# ll /tmp/pssh/
# cat /tmp/pssh/*

[root@li229-122 ~]# speedtest-cli --list | grep China
[root@li229-122 ~]# speedtest-cli --server=3633 --share


lixi@lixi-desktop:~$ ping -T tsandaddr www.ustc.edu.cn -c 1
lixi@lixi-desktop:~# ./clockdiff 202.38.64.9
lixi@lixi-desktop:~#./clockdiff gigagate1.Princeton.EDU
service sshd start

rsync -vzrtopg --progress -e ssh --delete work@172.16.78.192:/www/* /databack/experiment/rsync
vi /etc/xinetd.d/rsync

/etc/init.d/xinetd restart
vi /etc/rsyncd.conf

echo "work:abc123" > /etc/rsyncd.passwd
chmod 600 /etc/rsyncd.passwd

rsync -avz --progress --delete work@172.16.78.192::www /databack/experiment/rsync
rsync -avz --progress /databack/experiment/rsync/ work@172.16.78.192::www
ngrep -W byline -d lo port 18080
ngrep -W byline -d eth0 port 80
ngrep '[a-zA-Z]' -t -W byline -d any tcp port 18080
ngrep -d3 -N -q \.flv
info info
sudo vdfuse -f /path/to/file.vdi /path/to/mountpoint

mount /path/to/mountpoint/Partition1 /path/to/someother/mountpoint

[root@localhost ~]# consoletype


date +%Y%m%d                   //显示前天年月日
date -d "+1 day" +%Y%m%d       //显示前一天的日期
date -d "-1 day" +%Y%m%d       //显示后一天的日期
date -d "-1 month" +%Y%m%d     //显示上一月的日期
date -d "+1 month" +%Y%m%d     //显示下一月的日期
date -d "-1 year" +%Y%m%d      //显示前一年的日期
date -d "+1 year" +%Y%m%d      //显示下一年的日期

date -s                        //设置当前时间，只有root权限才能设置，其他只能查看
date -s 20120523               //设置成20120523，这样会把具体时间设置成空00:00:00
date -s 01:01:01               //设置具体时间，不会对日期做更改
date -s "01:01:01 2012-05-23"  //这样可以设置全部时间
date -s "01:01:01 20120523"    //这样可以设置全部时间
date -s "2012-05-23 01:01:01"  //这样可以设置全部时间
date -s "20120523 01:01:01"    //这样可以设置全部时间



nmap man.linuxde.net &> /dev/null




[root@localhost ~]# yes testline


[root@localhost ~]# md5sum insert.sql

md5sum testfile > testfile.md5

md5sum testfile -c testfile.md5

md5sum -w -c testfile.md5


[root@localhost ~]# hostid


[root@localhost ~]# users

[root@localhost ~]# whoami

[root@localhost ~]# id -un

[root@localhost ~]# mesg y    #允许系统用户将信息直接显示在你的屏幕上。
[root@localhost ~]# mesg n    #不允许系统用户将信息直接显示在你的屏幕上。

stty iuclc     #开启
stty -iuclc    #恢复

stty olcuc    #开启
stty -olcuc   #恢复

stty size

stty eof "string"

stty -echo   #禁止回显
stty echo    #打开回显

stty -echo;read;stty echo;read

stty igncr     #开启
stty -igncr    #恢复



read -t 10 varname

[root@localhost ~]# mtools     #显示所有支持的指令名称


#seq -f"%3g" 9 11

#sed -f"%03g" 9 11
#seq -f"str%03g" 9 11

seq -w 98 101

seq -s" " -f"str%03g" 9 11

seq -s"`echo -e "/t"`" 9 11

seq -s"`echo -e "\n"`" 9 11


printf $(tput setaf 2; tput bold)'color show\n\n'$(tput sgr0)



printf '\n'$(tput setaf 2; tput setab 0; tput bold)'background color show'$(tput sgr0)'\n\n'





tput clear
tput cup 3 15
# set a foreground colour using ANSI escape
tput setaf 3
echo "XYX Corp LTD."
tput sgr0
tput cup 5 17
# Set reverse video mode
tput rev
echo "M A I N - M E N U"
tput sgr0
tput cup 7 15
echo "1. User Management"
tput cup 8 15
echo "2. service Management"
tput cup 9 15
echo "3. Process Management"
tput cup 10 15
echo "4. Backup"
# Set bold mode
tput bold
tput cup 12 15
read -p "Enter your choice [1-4] " choice
tput clear
tput sgr0
tput rc


[root@AY1307311912260196fcZ satools]# sh -x check_ssh_login.sh

[root@localhost ~]# fc -l -10     #显示10条历史命令

[root@localhost ~]# man -k who
[root@localhost ~]# apropos who

apropos -a emacs vi


wait %1       #等待作业号为3的作业完成

find / -name password

bg 1            #后台执行任务号为1的任务

find / -name password &     #后台执行任务

command echo Linux            #调用执行shell内部指令

Linux

read 1987name


read first last
read

read -a arrayname


read -p "text"

read -r line


read -t 3


read -n 2 var


read -d ":" var


#read 1987name        #等待读取输入，直到回车后表示输入完毕，并将输入赋值给变量answer


#echo $1987name       #打印变量


#read one two three

#echo "one = $one, two = $two, three = $three"


#read                  #等待控制台输入，并将结果赋值给特定内置变量REPLY。


#echo $REPLY           #打印输出特定内置变量REPLY，以确认是否被正确赋值。


#read -p "Enter your name: "            #输出文本提示，同时等待输入，并将结果赋值给REPLY。

#echo $REPLY

#read -a friends

#echo "They are ${friends[0]}, ${friends[1]} and ${friends[2]}."



#!/bin/bash
stty -echo
read -p "输入密码：" pwd


[root@localhost ~]# showkey -a
declare -ar BASH_VERSINFO='([0]="3" [1]="2" [2]="25" [3]="1" [4]="release" [5]="i686-redhat-linux-gnu")'
declare -ir EUID="0"
declare -ir PPID="31436"
declare -r SHELLOPTS="braceexpand:emacs:hashall:histexpand:history:interactive-comments:monitor"
declare -ir UID="0"

[root@localhost ~]# readonly test='ok'         #定义只读变量并初始化

[root@localhost ~]# test='my'                 #试图修改只读变量的值

[root@localhost ~]# ulimit -a

[root@localhost ~]# exit

cd $(dirname $0) || exit 1
trap "rm -f tmpfile; echo Bye." EXIT

./mycommand.sh


jobs -l               #显示当前系统的任务列表


[root@localhost ~]# enable -a

declare test='man.linuxde.net'    #定义并初始化shell变量

echo $test                        #输出shell变量的值

man.linuxde.net

builtin alias                 #执行shell内部指令
alias cp='cp -i'
alias l.='ls -d .* --color=tty'
alias ll='ls -l --color=tty'
alias ls='ls --color=tty'
alias mv='mv -i'
alias rm='rm -i'
alias which='alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde'

shopt           #输出所有可以设置的shell操作选项

shopt -s cdspell          #开启cd拼写检查

cdspell on                #开启cdspell选项

[root@localhost ~]# export

kill -l



ps -ef | grep vim

kill 3268
kill 3268

[root@localhost ~]# type ls

[root@localhost ~]# type cd

[root@localhost ~]# type date

[root@localhost ~]# type mysql

[root@localhost ~]# type nginx

[root@localhost ~]# type if

[root@localhost ~]# type which

[root@localhost ~]# type -a cd

[root@localhost ~]# type -a grep

help shopt

[root@localhost ~]# history 10


fg 1          #将任务转换到前台执行

find / -name password       #前台执行命令

echo Linux C++           #输出指定信息

Linux C++                #输出信息

exec -c echo Linux C++          #调用命令


unalias cc            #取消已经设置的命令别名


[root@localhost ~]# env

unset -v mylove         #删除指定的环境变量

apt-key list          #列出已保存在系统中key。
apt-key add keyname   #把下载的key添加到本地trusted数据库中。
apt-key del keyname   #从本地trusted数据库删除key。
apt-key update        #更新本地trusted数据库，删除过期没用的key。

dpkg -i package.deb     #安装包
dpkg -r package         #删除包
dpkg -P package         #删除包（包括配置文件）
dpkg -L package         #列出与该包关联的文件
dpkg -l package         #显示该包的版本
dpkg --unpack package.deb  #解开deb包的内容
dpkg -S keyword            #搜索所属的包内容
dpkg -l                    #列出当前已安装的包
dpkg -c package.deb        #列出deb包的内容
dpkg --configure package   #配置包



alias -p
alias cp='cp -i'
alias l.='ls -d .* --color=tty'
alias ll='ls -l --color=tty'
alias ls='ls --color=tty'
alias mv='mv -i'
alias rm='rm -i'
alias which='alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde'


sudo dpkg-reconfigure locales

chkconfig --list             #列出所有的系统服务。
chkconfig --add httpd        #增加httpd服务。
chkconfig --del httpd        #删除httpd服务。
chkconfig --level httpd 2345 on        #设置httpd在运行级别为2、3、4、5的情况下都是on（开启）的状态。
chkconfig --list               #列出系统所有的服务启动情况。
chkconfig --list mysqld        #列出mysqld服务设置情况。
chkconfig --level 35 mysqld on #设定mysqld在等级3和5为开机运行服务，--level 35表示操作只在等级3和5执行，on表示启动，off表示关闭。
chkconfig mysqld on            #设定mysqld在各等级为on，“各等级”包括2、3、4、5等级。

aptitude update            #更新可用的包列表
aptitude upgrade           #升级可用的包
aptitude dist-upgrade      #将系统升级到新的发行版
aptitude install pkgname   #安装包
aptitude remove pkgname    #删除包
aptitude purge pkgname     #删除包及其配置文件
aptitude search string     #搜索包
aptitude show pkgname      #显示包的详细信息
aptitude clean             #删除下载的包文件
aptitude autoclean         #仅删除过期的包文件


apt-get update

apt-get install packagename

apt-get remove packagename

apt-get –purge remove packagename

apt-get autoclean apt

apt-get clean

apt-get upgrade

apt-get dist-upgrade

apt-get autoclean

yum install              #全部安装
yum install package1     #安装指定的安装包package1
yum groupinsall group1   #安装程序组group1

yum update               #全部更新
yum update package1      #更新指定程序包package1
yum check-update         #检查可更新的程序
yum upgrade package1     #升级指定程序包package1
yum groupupdate group1   #升级程序组group1

yum info package1      #显示安装包信息package1
yum list               #显示所有已经安装和可以安装的程序包
yum list package1      #显示指定程序包安装情况package1
yum groupinfo group1   #显示程序组group1信息yum search string 根据关键字string查找安装包

yum remove &#124; erase package1   #删除程序包package1
yum groupremove group1             #删除程序组group1
yum deplist package1               #查看程序package1依赖情况

yum clean packages       #清除缓存目录下的软件包
yum clean headers        #清除缓存目录下的 headers
yum clean oldheaders     #清除缓存目录下旧的 headers

rpm -ivh your-package.rpm


rpm -i your-package.src.rpm
cd /usr/src/redhat/SPECS
rpmbuild -bp your-package.specs             #一个和你的软件包同名的specs文件
cd /usr/src/redhat/BUILD/your-package/      #一个和你的软件包同名的目录
./configure                                 #这一步和编译普通的源码软件一样，可以加上参数
make
make install

rpm -i you-package.src.rpm
cd /usr/src/redhat/SPECS

rpmbuild -bb your-package.specs       #一个和你的软件包同名的specs文件

rpm -e proftpd-1.2.8-1
rpm -e proftpd-1.2.8
rpm -e proftpd-
rpm -e proftpd

rpm -e proftpd-1.2.8-1.i386.rpm
rpm -e proftpd-1.2.8-1.i386
rpm -e proftpd-1.2
rpm -e proftpd-1

... is needed by ...

rpm2cpio xxx.rpm | cpio -vi
rpm2cpio xxx.rpm | cpio -idmv
rpm2cpio xxx.rpm | cpio --extract --make-directories

rpm -qa 讲列出所有安装过的包

rpm -qa | grep sql

rpm -q mysql

rpm -ql 包名

which mysql

rpm -qf `which 程序名`    #返回软件包的全名
rpm -qif `which 程序名`   #返回软件包的有关信息
rpm -qlf `which 程序名`   #返回软件包的文件列表

whereis ftptop

rpm -qf /usr/bin/ftptop
proftpd-1.2.8-1

rpm -qf /usr/share/doc/proftpd-1.2.8/rfc/rfc0959.txt
proftpd-1.2.8-1

rpm2cpio ../libstdc++-4.3.0-8.i386.rpm | cpio -idv

sudo dpkg-statoverride --update --add nagios nagios 751 /var/lib/nagios3

sudo dpkg-statoverride --force --update --add root sasl 755 /var/spool/postfix/var/run/saslauthd

sudo dpkg-statoverride --remove /usr/bin/wall

rpmbuild -ba 'spec文件路径'

dpkg-deb -x drcom-pum_1.0-0ubuntu1~ppa1~jaunty1_i386.deb drcom

dpkg-deb -e drcom-pum_1.0-0ubuntu1~ppa1~jaunty1_i386.deb drcom/DEBIAN

dpkg-deb -b drcom drcom_1.4.8.2_i386.deb

dpkg-deb -c demo.deb

[root@localhost test]$ cat main.cpp





[root@localhost test]$ g++ main.cpp -o main
[root@localhost test]$ g++ -g main.cpp -o main.debug

[root@localhost test]$ ls -l
[root@localhost test]$ g++ -c myfile.cpp
[root@localhost test]$ g++ -shared -fPCI -o libmy.so myfile.o
[root@localhost test]$ ar -r libmy.a myfile.o
[root@localhost test]$ readelf -h main

[root@localhost test]$ readelf -h myfile.o

[root@localhost test]$ readelf -h libmy.a
[root@localhost test]$ readelf -h libmy.so


[root@localhost test]$ readelf -l main


[root@localhost test]$ readelf -l myfile.o

[root@localhost test]$ readelf -l libmy.a

[root@localhost test]$ readelf -l libmy.so

[root@localhost test]$ readelf -S main

[root@localhost test]$ readelf -S main.debug


[root@localhost test]$ readelf -S myfile.o
[root@localhost test]$ readelf -S libmy.a
[root@localhost test]$ readelf -S libmy.so
dpkg-query -S file1

dpkg-query -W --showformat='${Package} ${Version}\n' > filename

dpkg-query -s capistrano

dpkg-query -L capistrano

dpkg-query -l

dpkg-query -W -f='${Status} ${Version}\n' apache-perl

dpkg-split -s foo.deb

dpkg-split -j "foo*"

[root@localhost ~]# rpmquery -qf /usr/bin/htpasswd

dpkg-preconfigure /var/cache/apt/archives/mysql-server-5.5*.deb

dpkg-divert --package wibble --divert /usr/bin/example.foo --rename /usr/bin/example

dpkg-divert --package wibble --rename --remove /usr/bin/example

dpkg-divert --rename --remove /usr/bin/example

dpkg-divert --divert /usr/bin/example.foo --rename /usr/bin/example

pstree -p work | grep ad
ps -Lf 4551

pstack 4551

[root@localhost test]# nl mytest.cpp


[root@localhost test]# g++ -c -g mytest.cpp

[root@localhost test]# objdump -V

[root@localhost test]# objdump -a libmy2.a

[root@localhost test]# ar -tv libmy2.a

[root@localhost test]# objdump -i

[root@localhost test]# objdump --section=.text -s mytest.o

[root@localhost test]# objdump -j .text -S mytest.o

[root@localhost test]# objdump -S mytest.o

[root@localhost test]# objdump -t mytest.o


[root@localhost test]# nm -s mytest.o

[root@localhost test]# objdump -t -C mytest.o

[root@localhost test]# objdump -d mytest.o

[root@localhost test]# objdump -d -l mytest.o

[root@localhost test]# objdump -h mytest.o

gcc gdb-sample.c -o gdb-sample -g
test File1 –ef File2    两个文件是否为同一个文件，可用于硬连接。主要判断两个文件是否指向同一个inode。
test File1 –nt File2    判断文件1是否比文件2新
test File1 –ot File2    判断文件1比是否文件2旧
test –b file   #文件是否块设备文件
test –c File   #文件并且是字符设备文件
test –d File   #文件并且是目录
test –e File   #文件是否存在 （常用）
test –f File   #文件是否为正规文件 （常用）
test –g File   #文件是否是设置了组id
test –G File   #文件属于的有效组ID
test –h File   #文件是否是一个符号链接（同-L）
test –k File   #文件是否设置了Sticky bit位
test –b File   #文件存在并且是块设备文件
test –L File   #文件是否是一个符号链接（同-h）
test –o File   #文件的属于有效用户ID
test –p File   #文件是一个命名管道
test –r File   #文件是否可读
test –s File   #文件是否是非空白文件
test –t FD     #文件描述符是在一个终端打开的
test –u File   #文件存在并且设置了它的set-user-id位
test –w File   #文件是否存在并可写
test –x File   #文件属否存在并可执行

indent -bs /home/rootlocal/桌面/test.c

gcc test.c

gcc test.c -o test

gcc -E test.c -o test.i

gcc -S test.i

gcc -c test.s

gcc test.o -o test

gcc -O1 test.c -o test

gcc testfun.c test.c -o test

gcc -c testfun.c    #将testfun.c编译成testfun.o
gcc -c test.c       #将test.c编译成test.o
gcc -o testfun.o test.o -o test    #将testfun.o和test.o链接成test

[root@localhost ~]# lpc
lpr -P lp man1 man2

lp /etc/motd

lp -c -m -n30 -dlp0:lpd0 /etc/motd

lp -t "blah" -o -f -o -a /etc/motd

lp myfile

lp -s myfile

lprm -Phpprint 102

lprm 101
