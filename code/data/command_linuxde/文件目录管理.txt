
uucico-r1

uupick-s localhost

uuto./testfile localhost/tmp #将文件传送到远程UUCP 主机localhost的tmp目录

scp root@10.10.10.10:/opt/soft/nginx-0.5.38.tar.gz /opt/soft/

scp -r root@10.10.10.10:/opt/soft/mongodb /opt/soft/

scp /opt/soft/nginx-0.5.38.tar.gz root@10.10.10.10:/opt/soft/scptest

scp -r /opt/soft/mongodb root@10.10.10.10:/opt/soft/scptest


rcp test1 webserver1:/home/root/test3

rcp test1 webserver1:/home/root/test3

rcp remote_hostname:remote_file local_fileEnter

rcp webserver1:/home/root/test2 .Enter

rcp webserver1:/home/root/test2 otherdir/ Enter

rcp webserver1:/home/root/test2 otherdir/otherfile Enter

rcp -r local_dir remote_hostname:remote_dir Enter

rcp -r work webserver1:/home/root/products Enter

rcp –r remote_hostname:remote_dir local_dir Enter

rcp –r webserver1:/home/root/work .Enter

mtype dos.txt         #打开MS-DOS 文件

$ mtype dos.txt
yum install xinetd
yum install tftp
yum install tftp-server

rpm -ivh xinetd-2.3.14-18.fc9.i386.rpm
rpm -ivh tftp-0.48-3.fc9.i386.rpm
rpm -ivh tftp-server-0.48-3.fc9.i386.rpm

/etc/init.d/iptables stop        //关闭防火墙
sudo /sbin/service xinetd start

service xinetd restart
/etc/init.d/xinetd start

netstat -a | grep tftp

tftp 192.168.1.2


tftp -g -r embedexpert 192.168.1.2

/usr/local/ncftp/bin/ncftpput -u koumm -p koumm -P 21 -m -R 192.168.162.137  flv/games/ /etc/*

mattrib a:

mattrib -h -s -r a:msdos.sys

mattrib -r -/ a:*.*

$ mmove autorun.bat test        #移动文件到目录test中


[root@localhost test]# nl log2015.log


[root@localhost test]# nl -b a log2015.log

[root@localhost test]# nl -b a -n rz log2015.log

[root@localhost test]# nl -b a -n rz -w 3 log2015.log


basename $WORKFILE

OFILE=`basename $1 .c`.o

touch ex2

updatedb -U /usr/local/  更新指定命令的slocate数据库

dpkg -i package.deb     #安装包
dpkg -r package         #删除包
dpkg -P package         #删除包（包括配置文件）
dpkg -L package         #列出与该包关联的文件
dpkg -l package         #显示该包的版本
dpkg --unpack package.deb  #解开deb包的内容
dpkg -S keyword            #搜索所属的包内容
dpkg -l                    #列出当前已安装的包
dpkg -c package.deb        #列出deb包的内容
dpkg --configure package   #配置包

deb [web或ftp地址] [发行版名字] [main/contrib/non-free]

apt-get update

apt-get install packagename

apt-get remove packagename

apt-get –purge remove packagename

apt-get autoclean apt

apt-get clean

apt-get upgrade

apt-get dist-upgrade

apt-get autoclean


apt-key list          #列出已保存在系统中key。
apt-key add keyname   #把下载的key添加到本地trusted数据库中。
apt-key del keyname   #从本地trusted数据库删除key。
apt-key update        #更新本地trusted数据库，删除过期没用的key。

aptitude update            #更新可用的包列表
aptitude upgrade           #升级可用的包
aptitude dist-upgrade      #将系统升级到新的发行版
aptitude install pkgname   #安装包
aptitude remove pkgname    #删除包
aptitude purge pkgname     #删除包及其配置文件
aptitude search string     #搜索包
aptitude show pkgname      #显示包的详细信息
aptitude clean             #删除下载的包文件
aptitude autoclean         #仅删除过期的包文件

chkconfig --list             #列出所有的系统服务。
chkconfig --add httpd        #增加httpd服务。
chkconfig --del httpd        #删除httpd服务。
chkconfig --level httpd 2345 on        #设置httpd在运行级别为2、3、4、5的情况下都是on（开启）的状态。
chkconfig --list               #列出系统所有的服务启动情况。
chkconfig --list mysqld        #列出mysqld服务设置情况。
chkconfig --level 35 mysqld on #设定mysqld在等级3和5为开机运行服务，--level 35表示操作只在等级3和5执行，on表示启动，off表示关闭。
chkconfig mysqld on            #设定mysqld在各等级为on，“各等级”包括2、3、4、5等级。

yum install              #全部安装
yum install package1     #安装指定的安装包package1
yum groupinsall group1   #安装程序组group1

yum update               #全部更新
yum update package1      #更新指定程序包package1
yum check-update         #检查可更新的程序
yum upgrade package1     #升级指定程序包package1
yum groupupdate group1   #升级程序组group1

yum info package1      #显示安装包信息package1
yum list               #显示所有已经安装和可以安装的程序包
yum list package1      #显示指定程序包安装情况package1
yum groupinfo group1   #显示程序组group1信息yum search string 根据关键字string查找安装包

yum remove &#124; erase package1   #删除程序包package1
yum groupremove group1             #删除程序组group1
yum deplist package1               #查看程序package1依赖情况

yum clean packages       #清除缓存目录下的软件包
yum clean headers        #清除缓存目录下的 headers
yum clean oldheaders     #清除缓存目录下旧的 headers

[root@localhost ~]# rpmquery -qf /usr/bin/htpasswd
httpd-2.2.3-81.el5.centos

rpm2cpio ../libstdc++-4.3.0-8.i386.rpm | cpio -idv

rpmbuild -ba 'spec文件路径'

rpm -ivh your-package.rpm

rpm -i your-package.src.rpm
cd /usr/src/redhat/SPECS
rpmbuild -bp your-package.specs             #一个和你的软件包同名的specs文件
cd /usr/src/redhat/BUILD/your-package/      #一个和你的软件包同名的目录
./configure                                 #这一步和编译普通的源码软件一样，可以加上参数
make
make install

rpm -i you-package.src.rpm
cd /usr/src/redhat/SPECS

rpmbuild -bb your-package.specs       #一个和你的软件包同名的specs文件

rpm -e proftpd-1.2.8-1
rpm -e proftpd-1.2.8
rpm -e proftpd-
rpm -e proftpd

rpm -e proftpd-1.2.8-1.i386.rpm
rpm -e proftpd-1.2.8-1.i386
rpm -e proftpd-1.2
rpm -e proftpd-1

... is needed by ...

rpm2cpio xxx.rpm | cpio -vi
rpm2cpio xxx.rpm | cpio -idmv
rpm2cpio xxx.rpm | cpio --extract --make-directories

rpm -qa 讲列出所有安装过的包

rpm -qa | grep sql

rpm -q mysql

rpm -ql 包名

which mysql

rpm -qf `which 程序名`    #返回软件包的全名
rpm -qif `which 程序名`   #返回软件包的有关信息
rpm -qlf `which 程序名`   #返回软件包的文件列表

whereis ftptop
ftptop: /usr/bin/ftptop /usr/share/man/man1/ftptop.1.gz

rpm -qf /usr/bin/ftptop
proftpd-1.2.8-1

rpm -qf /usr/share/doc/proftpd-1.2.8/rfc/rfc0959.txt
proftpd-1.2.8-1

dpkg-deb -x drcom-pum_1.0-0ubuntu1~ppa1~jaunty1_i386.deb drcom

dpkg-deb -e drcom-pum_1.0-0ubuntu1~ppa1~jaunty1_i386.deb drcom/DEBIAN

dpkg-deb -b drcom drcom_1.4.8.2_i386.deb

dpkg-deb -c demo.deb

sudo dpkg-statoverride --update --add nagios nagios 751 /var/lib/nagios3

sudo dpkg-statoverride --force --update --add root sasl 755 /var/spool/postfix/var/run/saslauthd

sudo dpkg-statoverride --remove /usr/bin/wall

dpkg-divert --package wibble --divert /usr/bin/example.foo --rename /usr/bin/example

dpkg-divert --package wibble --rename --remove /usr/bin/example

dpkg-divert --rename --remove /usr/bin/example

dpkg-divert --divert /usr/bin/example.foo --rename /usr/bin/example

dpkg-split -s foo.deb

dpkg-split -j "foo*"

dpkg-preconfigure /var/cache/apt/archives/mysql-server-5.5*.deb

dpkg-query -S file1

dpkg-query -W --showformat='${Package} ${Version}\n' > filename

dpkg-query -s capistrano

dpkg-query -L capistrano

dpkg-query -l

dpkg-query -W -f='${Status} ${Version}\n' apache-perl

find . -type f -atime 7
find . -type f -atime +7
find . -type f -amin +10
find . -type f -newer file.log
find . -type f -size 文件大小单元
find . -type f -size +10k
find . -type f -size -10k
find . -type f -size 10k
find . -type f -name "*.txt" -delete
find . -type f -perm 777
find . -type f -name "*.php" ! -perm 644
find . -type f -user tom
find . -type f -group sunk
find .-type f -user root -exec chown tom {} \;
find $HOME/. -name "*.txt" -ok rm {} \;
find . -type f -name "*.txt" -exec cat {} \;> all.txt
find . -type f -mtime +30 -name "*.log" -exec cp {} old \;
find . -type f -name "*.txt" -exec printf "File: %s\n" {} \;
-exec ./text.sh {} \;
find . -path "./sk" -prune -o -name "*.txt" -print
find . -empty

[linuxde@localhost ~]$ cat tmp


[linuxde@localhost ~]$ od -b tmp


[linuxde@localhost ~]$ od -c tmp

[linuxde@localhost ~]$ od -t d1 tmp


[linuxde@localhost ~]$ od -A d -c tmp


[linuxde@localhost ~]$ od -A x -c tmp

[linuxde@localhost ~]$ od -j 2 -c tmp


[linuxde@localhost ~]$ od -N 2 -j 2 -c tmp
[linuxde@localhost ~]$ od -w1 -c tmp
[linuxde@localhost ~]$ od -w2 -c tmp


[linuxde@localhost ~]$ od -w3 -b tmp

tail file
tail +20 file
tail -c 10 file

[root@localhost ~]# which pwd


[root@localhost ~]#  which adduser



hexdump -e '16/1 "%02X " "  |  "' -e '16/1 "%_p" "\n"' test



[root@localhost text]# cut -f 1 test.txt


[root@localhost text]# cut -f2,3 test.txt



[root@localhost text]# cut -f2 --complement test.txt


[root@localhost text]# cat test2.txt


[root@localhost text]# cut -f2 -d";" test2.txt


[root@localhost text]# cat test.txt



[root@localhost text]# cut -c1-3 test.txt

[root@localhost text]# cut -c-2 test.txt


[root@localhost text]# cut -c5- test.txt

more -dc file

more -c -10 file

jed -2 mysource.c



install -D x a/b/c
mkdir -p a/b && cp x a/b/c



mkdir -m 700 /usr/meng/test

mkdir -p-m 750 bin/os_1

root@Mylinux:/tmp/dir4# popd
root@Mylinux:/tmp/dir3# pushd /tmp/dir4


root@Mylinux:/tmp/dir4# popd +1

root@Mylinux:/tmp/dir4# popd -2


cd /usr/meng/test


[root@localhost etc]# dirs


root@Mylinux:/tmp/dir4# pushd /tmp/dir3


root@Mylinux:/tmp/dir3# pushd /tmp/dir2


root@Mylinux:/tmp/dir2# pushd -1


[root@localhost ~]# ls -1


[root@localhost ~]# ls -i -l anaconda-ks.cfg install.log


[root@localhost /]# ls -m

[root@localhost /]# ls -t

[root@localhost ~]# ls -R


[root@localhost /]# ls -n

[root@localhost /]# ls -lh

[root@localhost /]# ls -lt
[root@localhost /]# ls -ltr


[root@localhost nginx-1.2.1]# ls -F

[root@localhost nginx-1.2.1]# ls --color=auto

cp ../mary/homework/assign .

cp file /usr/men/tmp/file1

cp -r /usr/men /usr/zh

cp -i /usr/men m*.c /usr/zh

cp aaa/* /bbb
cp -r aaa/* /bbb
cp -r -a aaa/* /bbb
\cp -r -a aaa/* /bbb
lsattr -E -l rmt0 -H
lsattr -EO -l rmt0


umask -s

dos2unix file

dos2unix file1 file2 file3
dos2unix -o file1 file2 file3

dos2unix oldfile newfile

dos2unix -k file
dos2unix -k file1 file2 file3
dos2unix -k -o file1 file2 file3
dos2unix -k -n oldfile newfile

chgrp -R mengxin /usr/meng

[root@localhost text]# comm aaa.txt bbb.txt -1 -2

[root@localhost text]# comm aaa.txt bbb.txt -3 | sed 's/^\t//'

[root@localhost text]# comm aaa.txt bbb.txt -2 -3

[root@localhost text]# comm aaa.txt bbb.txt -1 -3

[root@localhost ~]# ls -l myfile
[root@localhost ~]# stat myfile

[root@localhost ~]# stat -f myfile

[root@localhost ~]# stat -t myfile
chown -R liu /usr/meng

[root@localhost ~]# file install.log

[root@localhost ~]# file -b install.log


[root@localhost ~]# file -i install.log

[root@localhost ~]# file -b -i install.log


[root@localhost ~]# ls -l /var/mail

[root@localhost ~]# file /var/mail

[root@localhost ~]# file -L /var/mail
[root@localhost ~]# file /var/spool/mail

[root@localhost ~]# file -L /var/spool/mail


chattr +i /etc/fstab

chattr +a /data1/user_act.log

egrep Linux *


fgrep strcpy *.c

fgrep -c 『{』pgm.cfgrep -c 『}』pgm.c

egrep {\|} pgm.c

fgrep -l strcpy *.c

printf "hello world"




[root@localhost split]# dd if=/dev/zero bs=100k count=1 of=date.file


[root@localhost split]# split -b 10k date.file


[root@localhost split]# split -b 10k date.file -d -a 3
[root@localhost split]# ls


[root@localhost split]# split -b 10k date.file -d -a 3 split_file
[root@localhost split]# ls
split -l 10 date.file

[root@mail text]# cat sort.txt

[root@mail text]# sort sort.txt


[root@mail text]# sort -u sort.txt


[root@mail text]# uniq sort.txt



[root@mail text]# cat sort.txt
[root@mail text]# sort -nk 2 -t: sort.txt

[root@mail text]# sort -nrk 3 -t: sort.txt



$ sort -t ' ' -k 1.2 facebook.txt


$ sort -t ' ' -k 1.2,1.2 -nrk 3,3 facebook.txt

uniq file.txt
sort file.txt | uniq
sort -u file.txt


uniq -u file.txt
sort file.txt | uniq -u

sort file.txt | uniq -c

sort file.txt | uniq -d

diff test1 test2 | diffstat    #进行比较结果的统计显示

cat test1/testf.txt

cat test2/testf.txt

testfile | 2 +-
echo "HELLO WORLD" | tr 'A-Z' 'a-z'

echo "hello 123 world 456" | tr -d '0-9'

echo aa.,a 1 b#$bb 2 c*/cc 3 ddd 4 | tr -d -c '0-9 \n'

echo "thissss is      a text linnnnnnne." | tr -s ' sn'

echo 1 2 3 4 5 6 7 8 9 | xargs -n1 | echo $[ $(tr '\n' '+') 0 ]


cat file | tr -s "\r" "\n" > new_file
cat file | tr -d "\r" > new_file

lha -a abc.lhz a.b         #压缩a.b文件，压缩后生成 abc.lhz 文件
lha -a abc2 /home/hnlinux  #压缩目录
lha -xiw=agis abc          #解压文件abc，到当前目录

cat server.log
[root@localhost split]# csplit server.log /SERVER/ -n2 -s {*} -f server -b "%02d.log"; rm server00.log
[root@localhost split]# ls
rm server00.log    #是删除第一个文件，因为分割后的的第一个文件没有内容，匹配的单词就位于文件的第一行中。

[root@localhost ~]# cd /tmp
[root@localhost tmp]# cp /etc/man.config .
[root@localhost tmp]# compress man.config
[root@localhost tmp]# ls -l

[root@localhost tmp]# compress -d man.config.Z

[root@localhost tmp]# compress -c man.config > man.config.back.Z
[root@localhost tmp]# ll man.config*

bzcat man.config.bz2

tar -cvf log.tar log2012.log    仅打包，不压缩！
tar -zcvf log.tar.gz log2012.log   打包后，以 gzip 压缩
tar -jcvf log.tar.bz2 log2012.log  打包后，以 bzip2 压缩

tar -ztvf log.tar.gz

tar -zxvf /opt/soft/test/log.tar.gz

tar -zxvf /opt/soft/test/log30.tar.gz log2013.log

tar -zcvpf log31.tar.gz log2014.log log2015.log log2016.log

tar -N "2012/11/13" -zcvf log17.tar.gz test

tar --exclude scf/service -zcvf scf.tar.gz scf/*
bzip2 filename
bzip2 -z filename

bzip2 -d filename.bz2
bunzip2 filename.bz2

$bzip2 -v filename

filename:  0.119:1, 67.200 bits/byte, -740.00% saved, 5 in, 42 out.

bzip2 -tv filename.bz2

filename.bz2: ok

bzip2 -k filename

bzip2 -dc filename.bz2

bzip2 -c filename
bzip2: I won't write compressed data to a terminal.
bzip2: For help, type: `bzip2 --help'.

bzip2 -- -myfilename

gzip *

gzip -dv *

gzip -l *

gzip -r log.tar

gzip -rv test6

gzip -dr test6

unzip test.zip

unzip -n test.zip -d /tmp

unzip -v test.zip

unzip -o test.zip -d tmp/

zip –r /opt/etc.zip /etc
gzip -9v /opt/etc.zip

gzip -l /opt/etc.zip.gz
compressed        uncompressed ratio uncompressed_name
11938745            12767265   6.5% /opt/etc.zip

[root@mylinux ~]#gzip –d /opt/etc.zip.gz
[root@mylinux ~]#gunzip /opt/etc.zip.gz

bzip2 -9vk /opt/etc.zip /opt/var.zip /opt/backup.zip

zip -q -r html.zip /home/Blinux/html

zip -q -r html.zip html

zip -q -r html.zip *

compress FileName

uncompress FileName.Z

find /etc –type f | cpio –ocvB >/opt/etc.cpio

find / -print | cpio -covB > /dev/st0

cpio  -icdvt < /dev/st0 > /tmp/st_content

cpio –icduv < /opt/etc.cpio

dump -9 -u -f /dev/hda3 /home/frank/

restore rf /dev/hda3 /home/frank

restore ft /dev/hda3

‍dump -0u -f /tmp/homeback.bak /home

dump -1u -f /tmp/homeback.bak /home
