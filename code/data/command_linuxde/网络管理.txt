
mattrib a:

mattrib -h -s -r a:msdos.sys

mattrib -r -/ a:*.*

$ mmove autorun.bat test        #移动文件到目录test中

# 安装firewalld
yum install firewalld firewall-config

systemctl start  firewalld # 启动
systemctl status firewalld # 或者 firewall-cmd --state 查看状态
systemctl disable firewalld # 停止
systemctl stop firewalld  # 禁用

# 关闭服务的方法
# 你也可以关闭目前还不熟悉的FirewallD防火墙，而使用iptables，命令如下：

systemctl stop firewalld
systemctl disable firewalld
yum install iptables-services
systemctl start iptables
systemctl enable iptables

firewall-cmd --version  # 查看版本
firewall-cmd --help     # 查看帮助

# 查看设置：
firewall-cmd --state  # 显示状态
firewall-cmd --get-active-zones  # 查看区域信息
firewall-cmd --get-zone-of-interface=eth0  # 查看指定接口所属区域
firewall-cmd --panic-on  # 拒绝所有包
firewall-cmd --panic-off  # 取消拒绝状态
firewall-cmd --query-panic  # 查看是否拒绝

firewall-cmd --reload # 更新防火墙规则
firewall-cmd --complete-reload
# 两者的区别就是第一个无需断开连接，就是firewalld特性之一动态添加规则，第二个需要断开连接，类似重启服务


# 将接口添加到区域，默认接口都在public
firewall-cmd --zone=public --add-interface=eth0
# 永久生效再加上 --permanent 然后reload防火墙

# 设置默认接口区域，立即生效无需重启
firewall-cmd --set-default-zone=public

# 查看所有打开的端口：
firewall-cmd --zone=dmz --list-ports

# 加入一个端口到区域：
firewall-cmd --zone=dmz --add-port=8080/tcp
# 若要永久生效方法同上

# 打开一个服务，类似于将端口可视化，服务需要在配置文件中添加，/etc/firewalld 目录下有services文件夹，这个不详细说了，详情参考文档
firewall-cmd --zone=work --add-service=smtp

# 移除服务
firewall-cmd --zone=work --remove-service=smtp

# 显示支持的区域列表
firewall-cmd --get-zones

# 设置为家庭区域
firewall-cmd --set-default-zone=home

# 查看当前区域
firewall-cmd --get-active-zones

# 设置当前区域的接口
firewall-cmd --get-zone-of-interface=enp03s

# 显示所有公共区域（public）
firewall-cmd --zone=public --list-all

# 临时修改网络接口（enp0s3）为内部区域（internal）
firewall-cmd --zone=internal --change-interface=enp03s

# 永久修改网络接口enp03s为内部区域（internal）
firewall-cmd --permanent --zone=internal --change-interface=enp03s

# 显示服务列表
Amanda, ftp, Samba和tftp等最重要的服务已经被FirewallD提供相应的服务，可以使用如下命令查看：

firewall-cmd --get-services

# 允许ssh服务通过
firewall-cmd --enable service=ssh

# 禁止SSH服务通过
firewall-cmd --disable service=ssh

# 打开TCP的8080端口
firewall-cmd --enable ports=8080/tcp

# 临时允许Samba服务通过600秒
firewall-cmd --enable service=samba --timeout=600

# 显示当前服务
firewall-cmd --list-services

# 添加HTTP服务到内部区域（internal）
firewall-cmd --permanent --zone=internal --add-service=http
firewall-cmd --reload     # 在不改变状态的条件下重新加载防火墙

# 打开443/TCP端口
firewall-cmd --add-port=443/tcp

# 永久打开3690/TCP端口
firewall-cmd --permanent --add-port=3690/tcp

# 永久打开端口好像需要reload一下，临时打开好像不用，如果用了reload临时打开的端口就失效了
# 其它服务也可能是这样的，这个没有测试
firewall-cmd --reload

# 查看防火墙，添加的端口也可以看到
firewall-cmd --list-all

# FirewallD包括一种直接模式，使用它可以完成一些工作，例如打开TCP协议的9999端口

firewall-cmd --direct -add-rule ipv4 filter INPUT 0 -p tcp --dport 9000 -j accept
firewall-cmd --reload



firewall-cmd --add-service=mysql        # 开放mysql端口
firewall-cmd --remove-service=http      # 阻止http端口
firewall-cmd --list-services            # 查看开放的服务
firewall-cmd --add-port=3306/tcp        # 开放通过tcp访问3306
firewall-cmd --remove-port=80tcp        # 阻止通过tcp访问3306
firewall-cmd --add-port=233/udp         # 开放通过udp访问233
firewall-cmd --list-ports               # 查看开放的端口

firewall-cmd --query-masquerade # 检查是否允许伪装IP
firewall-cmd --add-masquerade   # 允许防火墙伪装IP
firewall-cmd --remove-masquerade# 禁止防火墙伪装IP

firewall-cmd --add-forward-port=port=80:proto=tcp:toport=8080   # 将80端口的流量转发至8080
firewall-cmd --add-forward-port=port=80:proto=tcp:toaddr=192.168.0.1 # 将80端口的流量转发至192.168.0.1
firewall-cmd --add-forward-port=port=80:proto=tcp:toaddr=192.168.0.1:toport=8080 # 将80端口的流量转发至192.168.0.1的8080端口

[root@li229-122 ~]# speedtest-cli --list | grep China

# pssh -h ip.txt -i uptime

# pssh -h IP.txt -i "/usr/local/mysql/bin/mysql -e 'show slave status \G'"|grep Running:

# pssh -h IP.txt -i -o /tmp/pssh/ uptime

# ll /tmp/pssh/

# cat /tmp/pssh/*

sudo vdfuse -f /path/to/file.vdi /path/to/mountpoint

mount /path/to/mountpoint/Partition1 /path/to/someother/mountpoint

lixi@lixi-desktop:~$ ping -T tsandaddr www.ustc.edu.cn -c 1



lixi@lixi-desktop:~# ./clockdiff -o 202.38.64.9

lixi@lixi-desktop:~# ./clockdiff 202.38.64.9
lixi@lixi-desktop:~#./clockdiff gigagate1.Princeton.EDU
[root@localhost ~]# yes testline
service sshd start

rsync -vzrtopg --progress -e ssh --delete work@172.16.78.192:/www/* /databack/experiment/rsync

rsync -avz --progress --delete work@172.16.78.192::www /databack/experiment/rsync

rsync -avz --progress /databack/experiment/rsync/ work@172.16.78.192::www

ngrep -W byline -d lo port 18080

ngrep -W byline -d eth0 port 80

ngrep '[a-zA-Z]' -t -W byline -d any tcp port 18080

ngrep -d3 -N -q \.flv


[root@localhost ~]# md5sum insert.sql

md5sum testfile > testfile.md5

md5sum testfile -c testfile.md5



md5sum -w -c testfile.md5


[root@localhost ~]# consoletype


[root@localhost ~]# whoami


[root@localhost ~]# id -un



[root@localhost ~]# users


[root@localhost ~]# hostid



[root@localhost ~]# mesg y    #允许系统用户将信息直接显示在你的屏幕上。
[root@localhost ~]# mesg n    #不允许系统用户将信息直接显示在你的屏幕上。

[root@localhost ~]# mtools     #显示所有支持的指令名称



stty iuclc     #开启
stty -iuclc    #恢复

stty olcuc    #开启
stty -olcuc   #恢复

stty size

stty eof "string"

stty -echo   #禁止回显
stty echo    #打开回显

stty -echo;read;stty echo;read

stty igncr     #开启
stty -igncr    #恢复

read -t 10 varname



[root@localhost ~]# fc -l -10     #显示10条历史命令

[root@localhost ~]# man -k who

[root@localhost ~]# apropos who
[root@localhost ~]# showkey -a


bg 1            #后台执行任务号为1的任务

find / -name password &     #后台执行任务

jobs -l               #显示当前系统的任务列表

[1] + 1903 运行中          find / -name password &

declare test='man.linuxde.net'    #定义并初始化shell变量

echo $test                        #输出shell变量的值



read 1987name


read first last


read

read -a arrayname


read -p "text"


read -r line


read -t 3


read -n 2 var


read -d ":" var

#read 1987name        #等待读取输入，直到回车后表示输入完毕，并将输入赋值给变量answer

#echo $1987name       #打印变量


#read one two three



#read                  #等待控制台输入，并将结果赋值给特定内置变量REPLY。


#echo $REPLY           #打印输出特定内置变量REPLY，以确认是否被正确赋值。


#read -p "Enter your name: "            #输出文本提示，同时等待输入，并将结果赋值给REPLY。


#echo $REPLY


#read -a friends

#echo "They are ${friends[0]}, ${friends[1]} and ${friends[2]}."




read v1 v3          #读取变量值


echo $v1 $v3       #输出变量的值


wait %1       #等待作业号为3的作业完成

find / -name password

builtin alias                 #执行shell内部指令
alias cp='cp -i'
alias l.='ls -d .* --color=tty'
alias ll='ls -l --color=tty'
alias ls='ls --color=tty'
alias mv='mv -i'
alias rm='rm -i'
alias which='alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde'


fg 1          #将任务转换到前台执行

find / -name password       #前台执行命令

[root@localhost ~]# history 10

help shopt                #获取shopt命令的帮助信息

[root@localhost text]# curl -I http://man.linuxde.net

alias -p
alias cp='cp -i'
alias l.='ls -d .* --color=tty'
alias ll='ls -l --color=tty'
alias ls='ls --color=tty'
alias mv='mv -i'
alias rm='rm -i'
alias which='alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde'

# jwhois root

//查找root用户信息

[root@localhost ~]# jwhois linuxde.net
wget http://www.linuxde.net/testfile.zip

wget -O wordpress.zip http://www.linuxde.net/download.aspx?id=1080

wget http://www.linuxde.net/download?id=1

wget -O wordpress.zip http://www.linuxde.net/download.aspx?id=1080

wget --limit-rate=300k http://www.linuxde.net/testfile.zip

wget -c http://www.linuxde.net/testfile.zip

wget -b http://www.linuxde.net/testfile.zip



tail -f wget-log

wget --user-agent="Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.204 Safari/534.16" http://www.linuxde.net/testfile.zip

wget --spider URL



wget --spider url

wget --tries=40 URL

wget -i filelist.txt



wget --mirror -p --convert-links -P ./LOCAL URL

wget --reject=gif ur

wget -o download.log URL

wget -Q5m -i filelist.txt

wget -r -A.pdf url

wget ftp-url
wget --ftp-user=USERNAME --ftp-password=PASSWORD url

wget ftp-url

wget --ftp-user=USERNAME --ftp-password=PASSWORD url

rexec host1 date

rexec -nhost1 date

rexec host1 ls -l /home/karen

mail -s "Hello from linuxde.net by shell" admin@linuxde.net
hello,this is the content of mail.
welcome to www.linuxde.net

echo "hello,this is the content of mail.welcome to www.linuxde.net" | mail -s "Hello from linuxde.net by pipe" admin@linuxde.net

mail -s "Hello from linuxde.net by file" admin@linuxde.net < mail.txt

mail -s "Hello from linuxde.net with sender" admin@linuxde.net -- -f user@linuxde.net<mail.txt

yum install sharutils

uuencode test.txt test | mail -s "hello,see the attachement" admin@linuxde.net<mail.txt

[root@localhost ~]# ipcalc -p 192.168.2.1 255.255.255.0
[root@localhost ~]# ipcalc -n 192.168.2.1 255.255.255.0

[root@localhost ~]# ipcalc -h 127.0.0.1

[root@localhost ~]# ipcalc -m 192.168.2.1

[root@localhost ~]# ipcalc -pnbm 192.168.2.1 255.255.255.0
[root@localhost ~]# mailq -v

[root@localhost ~]# ss -t -a

[root@localhost ~]# ss -s

[root@localhost ~]# ss -l

[root@localhost ~]# ss -pl

[root@localhost ~]# ss -pl | grep 3306

[root@localhost ~]# ss -u -a

[root@localhost ~]# ip link list

[root@localhost ~]# ip -s link list


[root@localhost ~]# ip route list

[root@localhost ~]# ip neigh list

[root@A ~]# tcpprep -an client -i ftp.pcap -o ftp.cache –v

[root@A ~]# tcpreplay -c ftp.cache -i eth0 -j eth1 ftp.pcap -R –v

[root@A ~]# tcpprep -an client -i bt.pcap -o bt.cache -C "100M BT Packet" –v

[root@A ~]# tcpreplay -c bt.cache -i eth0 -j eth1 bt.pcap -v –R

[root@A ~]# tcpprep -an server -i tftp.pcap -o tftp.cache –v

[root@A ~]# tcpreplay -c tftp.cache -i eth0 -j eth1 tftp.pcap –v

arpd -b /var/tmp/arpd.db

arpd -l -b /var/tmp/arpd.db

iptables -F
iptables -X
iptables -Z

iptables -A INPUT -s 127.0.0.1 -d 127.0.0.1 -j ACCEPT               #允许本地回环接口(即运行本机访问本机)
iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT    #允许已建立的或相关连的通行
iptables -A OUTPUT -j ACCEPT         #允许所有本机向外的访问
iptables -A INPUT -p tcp --dport 22 -j ACCEPT    #允许访问22端口
iptables -A INPUT -p tcp --dport 80 -j ACCEPT    #允许访问80端口
iptables -A INPUT -p tcp --dport 21 -j ACCEPT    #允许ftp服务的21端口
iptables -A INPUT -p tcp --dport 20 -j ACCEPT    #允许FTP服务的20端口
iptables -A INPUT -j reject       #禁止其他未允许的规则访问
iptables -A FORWARD -j REJECT     #禁止其他未允许的规则访问

iptables -I INPUT -s 123.45.6.7 -j DROP       #屏蔽单个IP的命令
iptables -I INPUT -s 123.0.0.0/8 -j DROP      #封整个段即从123.0.0.1到123.255.255.254的命令
iptables -I INPUT -s 124.45.0.0/16 -j DROP    #封IP段即从123.45.0.1到123.45.255.254的命令
iptables -I INPUT -s 123.45.6.0/24 -j DROP    #封IP段即从123.45.6.1到123.45.6.254的命令是

iptables -L -n -v

iptables -L -n --line-numbers

iptables -D INPUT 8

tcpdump

tcpdump -i eth1

tcpdump host sundown

tcpdump host 210.27.48.1

tcpdump host helios and \( hot or ace \)

tcpdump host 210.27.48.1 and \ (210.27.48.2 or 210.27.48.3 \)

tcpdump ip host ace and not helios

tcpdump ip host 210.27.48.1 and ! 210.27.48.2

tcpdump -i eth0 src host hostname

tcpdump -i eth0 dst host hostname

tcpdump tcp port 23 host 210.27.48.1

tcpdump udp port 123

tcpdump net ucb-ether

tcpdump 'gateway snup and (port ftp or ftp-data)'

tcpdump ip and not net localnet

iptables-restor < iptables.bak

[root@localhost ~]# host www.linuxde.net

[root@localhost ~]# host -a www.linuxde.net

ip6tables -nl --line-numbers

vi /etc/sysconfig/ip6tables


# ip6tables -vnL --line-numbers


[root@localhost ~]# iptables-save -t filter > iptables.bak
[root@localhost ~]# cat iptables.bak

iperf -u -s

iperf -u -c 192.168.1.1 -b 100M -t 60

iperf -u -c 192.168.1.1 -b 5M -P 30 -t 60

iperf -u -c 192.168.1.1 -b 100M -d -t 60

iperf -s

iperf -c 192.168.1.1 -t 60

iperf -c 192.168.1.1  -P 30 -t 60

iperf -c 192.168.1.1  -d -t 60

tracepath www.58.com

[root@localhost ~]# nslookup www.linuxde.net

ssh-copy-id user@server
ssh-copy-id -i ~/.ssh/id_rsa.pub user@server

[root@AY1307311912260196fcZ ~]# ping www.linuxde.net

[root@localhost2 tmp]# nc -lp 1234 > install.log

[root@localhost1 ~]# ll install.log


[root@localhost1 ~]# nc -w 1 192.168.228.222 1234 < install.log

nc -l -p 1234 | dd of=/dev/sda

dd if=/dev/sda | nc 192.168.228.222 1234

nc -v -w 1 192.168.228.222 -z 1-1000


nc -l -p 80 -q 1 < somepage.html;


[root@localhost2 tmp]# nc -lp 1234

[root@localhost1 ~]# nc 192.168.228.222 1234

[root@localhost2 tmp]# nc -l 1234 | tar xzvf -

[root@localhost1 ~]# ll -d nginx-0.6.34

[root@localhost1 ~]# tar czvf – nginx-0.6.34 | nc 192.168.228.222 1234

[root@localhost ~]# arping www.baidu.com

traceroute www.58.com


ssh-agent

[root@localhost ~]# dig www.linuxde.net


[root@localhost ~]# arp -v

ssh-add ~/.ssh/id_dsa

ssh-add -d ~/.ssh/id_xxx.pub

ssh-add -l

yum install nmap

[root@localhost ~]# nmap www.linuxde.net

netstat -a     #列出所有端口
netstat -at    #列出所有tcp端口
netstat -au    #列出所有udp端口

netstat -l        #只显示监听端口
netstat -lt       #只列出所有监听 tcp 端口
netstat -lu       #只列出所有监听 udp 端口
netstat -lx       #只列出所有监听 UNIX 端口

netstat -s   显示所有端口的统计信息
netstat -st   显示TCP端口的统计信息
netstat -su   显示UDP端口的统计信息


netstat -pt

netstat -an

netsat -a --numeric-ports
netsat -a --numeric-hosts
netsat -a --numeric-users

netstat -c   #每隔一秒输出网络信息

netstat --verbose


netstat -r

netstat -ap | grep ssh

netstat -an | grep ':80'

netstat -i

netstat -ntu | grep :80 | awk '{print $5}' | cut -d: -f1 | awk '{++ip[$1]} END {for(i in ip) print ip[i],"\t",i}' | sort -nr

netstat -nt | grep -e 127.0.0.1 -e 0.0.0.0 -e ::: -v | awk '/^tcp/ {++state[$NF]} END {for(i in state) print i,"\t",state[i]}'

netstat -anpo | grep "php-cgi" | wc -l

ethool eth0

ethtool -A tx off eth0

ethtool -i eth0

ethtool -K eth0 rx off

ethtool -p eth0 10

ethtool –S eth0

ethtool -s eth0 speed 100


[root@localhost ~]# mii-tool -v eth0

[root@localhost ~]# mii-tool -F 100baseTx-FD
[root@localhost ~]# mii-tool -v eth0

[root@localhost ~]# ethtool -s eth0 speed 100 duplex full

ifdown eth0  #禁用eth0


[root@AY1307311912260196fcZ ~]# hostname


ifup eth0   #激活eth0

[root@AY1307311912260196fcZ ~]# domainname -v
[root@AY1307311912260196fcZ ~]# domainname

[root@AY1307311912260196fcZ ~]# domainname -v

[root@AY1307311912260196fcZ ~]# dnsdomainname -v

[root@localhost ~]# ifconfig



ifconfig eth0 up
ifconfig eth0 down

ifconfig eth0 add 33ffe:3240:800:1005::2/64    #为网卡eth0配置IPv6地址
ifconfig eth0 del 33ffe:3240:800:1005::2/64    #为网卡eth0删除IPv6地址

ifconfig eth0 hw ether 00:AA:BB:CC:dd:EE

[root@localhost ~]# ifconfig eth0 192.168.2.10
[root@localhost ~]# ifconfig eth0 192.168.2.10 netmask 255.255.255.0
[root@localhost ~]# ifconfig eth0 192.168.2.10 netmask 255.255.255.0 broadcast 192.168.2.255

ifconfig eth0 arp    #开启网卡eth0 的arp协议
ifconfig eth0 -arp   #关闭网卡eth0 的arp协议

ifconfig eth0 mtu 1500    #设置能通过的最大数据包大小为 1500 bytes

[root@localhost ~]# route


[root@localhost ~]# route -n


route add -net 224.0.0.0 netmask 240.0.0.0 dev eth0    #增加一条到达244.0.0.0的路由。

route add -net 224.0.0.0 netmask 240.0.0.0 reject     #增加一条屏蔽的路由，目的地址为224.x.x.x将被拒绝。

route del -net 224.0.0.0 netmask 240.0.0.0
route del -net 224.0.0.0 netmask 240.0.0.0 reject

route del default gw 192.168.120.240
route add default gw 192.168.120.240

smbclient -L 198.168.0.1 -U username%password

smbclient //192.168.0.1/tmp  -U username%password

smbclient -c "ls"  //192.168.0.1/tmp  -U username%password

smbclient //192.168.0.1/tmp  -U username%password
smb:/>ls

smbclient -c "mkdir share1" //192.168.0.1/tmp -U username%password

nfsstat -c

nfsstat -cn

nfsstat -r

nfsstat –s

htpasswd -bc .passwd www.linuxde.net php

htpasswd -b .passwd Jack 123456

htpasswd -nb Jack 123456

htpasswd -D .passwd Jack

htpasswd -D .passwd Jack
htpasswd -b .passwd Jack 123456

mysqldump -u 用户名 -p 数据库名 > 导出的文件名
mysqldump -u linuxde -p smgp_apps_linuxde > linuxde.sql

mysqldump -u 用户名 -p 数据库名 表名> 导出的文件名
mysqldump -u linuxde -p smgp_apps_linuxde users > linuxde_users.sql

mysqldump -u linuxde -p -d --add-drop-table smgp_apps_linuxde > linuxde_db.sql
